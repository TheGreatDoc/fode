// Author: JohnPL, poprawki Xenom
// Skrypt awarenessa


#include "_client_defines.fos"
#include "_defines.fos"
#include "_msgstr.fos"
#include "_macros.fos"
#include "client_gui_h.fos"
#include "_colors.fos"
#include "factions.fos"

IGUIElementTextOpt@ awarenessMainFaction;
IGUIElementTextOpt@ awarenessFaction;
IGUIElementTextOpt@ awarenessHp;
IGUIElementTextOpt@ awarenessArmor;
IGUIElementTextOpt@ awarenessHead;
IGUIElementTextOpt@ awarenessWeapon;
IGUIElementTextOpt@ awarenessCripled;
IGUIElementTextOpt@ awarenessKarmaStatus;

RuchyMyszy mouseMove();

class RuchyMyszy : IGUIElementCallbackMouseMove
{
	void OnMouseMove(int x, int y)
	{
		CritterCl @ cr = GetMonitorCritter(x, y); //Na podstawie pozycji x,y pobiera klase CritterCl
		if(@cr == null)
		{
			CritterCl@[] critters;
			uint16 hx = 0;
			uint16 hy = 0;
			GetMonitorHex (x, y, hx, hy) ;
			if(hx==0 || hy == 0) return;
			GetCrittersHex (hx, hy, 1, FIND_ALL, critters);
			if(critters.length()>0) @cr=critters[0];
		}
		
		if((@cr != null) && (cr.ParamBase[CRITER_VISIBLE]==0))
		{
			CritterCl@ chosen=GetChosen();
			if(chosen.Perk[PE_AWARENESS]==0) // No Awareness
			{
				if(chosen.ParamBase[PLAYER_PROFESSION]==1 && cr.StatBase[ST_KARMA]<-200)awarenessKarmaStatus.Visible(true);
				else awarenessKarmaStatus.Visible(false);
				if(cr.ParamBase[PLAYER_MAIN_FACTION]!=0) awarenessMainFaction.Visible(true);
				else awarenessMainFaction.Visible(false);
				if(cr.ParamBase[PLAYER_FACTION]!=0) awarenessFaction.Visible(true);
				else awarenessFaction.Visible(false);
				awarenessHp.Visible(true);
				if(_CritIsInjured(cr))awarenessCripled.Visible(true); 
				else awarenessCripled.Visible(false);
	
				awarenessKarmaStatus.TextColor(COLOR_LRED2);
				awarenessKarmaStatus.setText("WANTED!!!");
				//awarenessNick.setText(cr.Name);
				if(cr.ParamBase[SCOUT_MAIN_FACTION]==1)awarenessMainFaction.Visible(false);
				else if(cr.ParamBase[SCOUT_MAIN_FACTION]==2 && chosen.ParamBase[PLAYER_MAIN_FACTION]==1)
				{
					awarenessMainFaction.TextColor(COLOR_LRED2);
					awarenessMainFaction.setText("REF");
				}
				else if(cr.ParamBase[SCOUT_MAIN_FACTION]==2 && chosen.ParamBase[PLAYER_MAIN_FACTION]==2)
				{
					awarenessMainFaction.TextColor(COLOR_LBLUE2);
					awarenessMainFaction.setText("NEC");
				}
				else if(cr.ParamBase[PLAYER_MAIN_FACTION]==1)
				{
					awarenessMainFaction.TextColor(COLOR_LRED2);
					awarenessMainFaction.setText("REF");
				}
				else if(cr.ParamBase[PLAYER_MAIN_FACTION]==2)
				{
					awarenessMainFaction.TextColor(COLOR_LBLUE2);
					awarenessMainFaction.setText("NEC");
				}
				else awarenessMainFaction.Visible(false);
				if(cr.ParamBase[SCOUT_MAIN_FACTION]==1)awarenessFaction.Visible(false);
				else if (cr.ParamBase[SCOUT_PLAYER_FACTION]==1)awarenessFaction.setText(FACTIONS[chosen.ParamBase[PLAYER_FACTION]]);
				else if (cr.ParamBase[SCOUT_PLAYER_FACTION]==2)awarenessFaction.Visible(false);
				else if(cr.ParamBase[PLAYER_FACTION]!=0) awarenessFaction.setText(FACTIONS[cr.ParamBase[PLAYER_FACTION]]);
				else awarenessFaction.Visible(false);
				awarenessHp.setText(getSimpleHealthState(cr));
				if(_CritIsInjured(cr)) awarenessCripled.setText(GetMsgStr(TEXTMSG_GAME,STR_CRIT_LOOK_LIMBS(cr.Stat[ST_GENDER],false)));
				else awarenessCripled.Visible(false);

				AktualizujPozycje(x+20, y-10, 10);
			}
			else // Player with Awareness
			{
				if(chosen.ParamBase[PLAYER_PROFESSION]==1 && cr.StatBase[ST_KARMA]<-200)awarenessKarmaStatus.Visible(true);
				else awarenessKarmaStatus.Visible(false);
				if(cr.ParamBase[PLAYER_MAIN_FACTION]!=0) awarenessMainFaction.Visible(true);
				else awarenessMainFaction.Visible(false);
				if(cr.ParamBase[PLAYER_FACTION]!=0) awarenessFaction.Visible(true);
				else awarenessFaction.Visible(false);
				awarenessHp.Visible(true);
				if(cr.IsPlayer()) awarenessArmor.Visible(true);
				else awarenessArmor.Visible(false);
				if(cr.IsPlayer()) awarenessHead.Visible(true);
				else awarenessHead.Visible(false);
				awarenessWeapon.Visible(true);
				if(_CritIsInjured(cr))awarenessCripled.Visible(true); 
				else awarenessCripled.Visible(false);

				awarenessKarmaStatus.TextColor(COLOR_LRED2);
				awarenessKarmaStatus.setText("WANTED!!!");
				//awarenessNick.setText(cr.Name);
				if(cr.ParamBase[SCOUT_MAIN_FACTION]==1)awarenessMainFaction.Visible(false);
				else if(cr.ParamBase[SCOUT_MAIN_FACTION]==2 && chosen.ParamBase[PLAYER_MAIN_FACTION]==1)
				{
					awarenessMainFaction.TextColor(COLOR_LRED2);
					awarenessMainFaction.setText("REF");
				}
				else if(cr.ParamBase[SCOUT_MAIN_FACTION]==2 && chosen.ParamBase[PLAYER_MAIN_FACTION]==2)
				{
					awarenessMainFaction.TextColor(COLOR_LBLUE2);
					awarenessMainFaction.setText("NEC");
				}
				else if(cr.ParamBase[PLAYER_MAIN_FACTION]==1)
				{
					awarenessMainFaction.TextColor(COLOR_LRED2);
					awarenessMainFaction.setText("REF");
				}
				else if(cr.ParamBase[PLAYER_MAIN_FACTION]==2)
				{
					awarenessMainFaction.TextColor(COLOR_LBLUE2);
					awarenessMainFaction.setText("NEC");
				}
				else awarenessMainFaction.Visible(false);
				if(cr.ParamBase[SCOUT_MAIN_FACTION]==1)awarenessFaction.Visible(false);
				else if (cr.ParamBase[SCOUT_PLAYER_FACTION]==1)awarenessFaction.setText(FACTIONS[chosen.ParamBase[PLAYER_FACTION]]);
				else if (cr.ParamBase[SCOUT_PLAYER_FACTION]==2)awarenessFaction.Visible(false);
				else if (cr.ParamBase[PLAYER_FACTION]!=0) awarenessFaction.setText(FACTIONS[cr.ParamBase[PLAYER_FACTION]]);
				else awarenessFaction.Visible(false);
				if(cr.Stat[ST_CURRENT_HP]<-19)	awarenessHp.setText("Dead"); 
				else if (cr.Stat[ST_CURRENT_HP]>-20) awarenessHp.setText(cr.Stat[ST_CURRENT_HP] + "/" + (cr.Stat[ST_MAX_LIFE]) +" HP");
				setHpTexColor(cr);
				awarenessArmor.setText(getArmorName(cr));
				awarenessHead.setText(getHeadName(cr));
				awarenessWeapon.setText(getWeapoonName(cr));
				awarenessWeapon.setText(getWeapoonName(cr));
				awarenessCripled.setText(getCripledDetailedStuff(cr));

				AktualizujPozycje(x+20, y-10, 10);
			}
		} 
		else
		{
			awarenessKarmaStatus.Visible(false);
			awarenessMainFaction.Visible(false);
			awarenessFaction.Visible(false);
			awarenessHp.Visible(false);
			awarenessArmor.Visible(false);
			awarenessHead.Visible(false);
			awarenessWeapon.Visible(false);
			awarenessCripled.Visible(false);
		}
	
	}

	void AktualizujPozycje(int startX, int startY, int step)
	{
		int currentY = startY;

		if(awarenessMainFaction.isVisible())
		{
			awarenessMainFaction.Position(startX, currentY);
			currentY-=step;
		}
		if(awarenessFaction.isVisible())
		{
			awarenessFaction.Position(startX, currentY);
			currentY-=step;
		}
		if(awarenessCripled.isVisible())
		{
			awarenessCripled.Position(startX, currentY);
			currentY-=step;
		}
		if(awarenessWeapon.isVisible())
		{
			awarenessWeapon.Position(startX, currentY);
			currentY-=step;
		}
		if(awarenessHead.isVisible())
		{
			awarenessHead.Position(startX, currentY);
			currentY-=step;
		}
		if(awarenessArmor.isVisible())
		{
			awarenessArmor.Position(startX, currentY);
			currentY-=step;
		}
		if(awarenessHp.isVisible())
		{
			awarenessHp.Position(startX, currentY);
			currentY-=step;
		}
		if(awarenessKarmaStatus.isVisible())
		{
			awarenessKarmaStatus.Position(startX, currentY);
			currentY-=step;
		}
	}

	string@ getCripledDetailedStuff(CritterCl @ cr)
	{
		string cripledString = "";
		bool moreThemOne = false;
		bool cripledArms=false;
		bool cripledLegs = false;
		if(cr.Damage[DAMAGE_EYE]!=0)
		{
			cripledString+="damaged eye";
			moreThemOne=true;
		}
		if(cr.Damage[DAMAGE_RIGHT_ARM]!=0)
		{
			if(moreThemOne) cripledString+=", ";
			if(cr.Damage[DAMAGE_LEFT_ARM]!=0)
			{
				cripledString+="crippled arms";
				cripledArms = true;
			}
			else
			{
				cripledString+="crippled right arm";
			}
			moreThemOne=true;
		}
		if(cr.Damage[DAMAGE_LEFT_ARM]!=0 && not cripledArms)
		{
			if(moreThemOne) cripledString+=", ";
			cripledString+="crippled left arm";
			moreThemOne=true;
		}
		if(cr.Damage[DAMAGE_RIGHT_LEG]!=0)
		{
			if(moreThemOne) cripledString+=", ";
			if(cr.Damage[DAMAGE_LEFT_LEG]!=0)
			{
				cripledString+="crippled legs";
				cripledLegs = true;
			}
			else
			{
				cripledString+="crippled right leg";
			}
			moreThemOne=true;
		}
		if(cr.Damage[DAMAGE_LEFT_LEG]!=0 && not cripledLegs)
		{
			if(moreThemOne) cripledString+=", ";
			cripledString+="crippled left leg";
			moreThemOne=true;
		}
		return cripledString;
	}

	string@ getWeapoonName(CritterCl @ cr)
	{
		ItemCl@ item=cr.GetItem(0,SLOT_HAND1);
		if(@item!=null)
		{
			return GetMsgStr(TEXTMSG_ITEM,STR_ITEM_INFO(item));
		}
		awarenessWeapon.Visible(false);
		return "none";
	}

	string@ getHeadName(CritterCl @ cr)
	{
		ItemCl@ item=cr.GetItem(0,SLOT_HEAD);
		if(@item!=null)
		{
			return GetMsgStr(TEXTMSG_ITEM,STR_ITEM_INFO(item));
		}
		awarenessHead.Visible(false);
		return "none";
	}	
	
	string@ getArmorName(CritterCl @ cr)
	{
		ItemCl@ item=cr.GetItem(0,SLOT_ARMOR);
		if(@item!=null)
		{
			return GetMsgStr(TEXTMSG_ITEM,STR_ITEM_INFO(item));
		}
		awarenessArmor.Visible(false);
		return "No armor";
	}

	void setHpTexColor(CritterCl @ cr)
	{
		int hp_proc=cr.Stat[ST_CURRENT_HP]*100/cr.Stat[ST_MAX_LIFE];
		int green = 0xFF * hp_proc/100;
		green = CLAMP(green, 0, 0xFF);
		int red = 0xFF - green;
		red = CLAMP(red, 0, 0xFF);
		//Message("green: "+ green + ". red: " + red);
		awarenessHp.TextColor(COLOR_RGB(red,green,0));
	}

	string@ getSimpleHealthState(CritterCl @ cr)
	{
		string result="";
		int hp_proc=cr.Stat[ST_CURRENT_HP]*100/cr.Stat[ST_MAX_LIFE];
		if(cr.IsDead())
		{
			result+=GetMsgStr(TEXTMSG_GAME,STR_CRIT_LOOK_STATE(0));
			awarenessHp.TextColor(COLOR_LRED);
		}
		else if(hp_proc<34)
		{
			result+=GetMsgStr(TEXTMSG_GAME,STR_CRIT_LOOK_STATE(1));
			awarenessHp.TextColor(COLOR_LRED);
		}
		else if(hp_proc<67)
		{
			result+=GetMsgStr(TEXTMSG_GAME,STR_CRIT_LOOK_STATE(2));
			awarenessHp.TextColor(COLOR_CONTOUR_YELLOW);
		}
		else if(hp_proc<100)
		{
			result+=GetMsgStr(TEXTMSG_GAME,STR_CRIT_LOOK_STATE(3));
			awarenessHp.TextColor(COLOR_RGB(0xFF,0xFF,0));
		}
		else
		{
			result+=GetMsgStr(TEXTMSG_GAME,STR_CRIT_LOOK_STATE(4));
			awarenessHp.TextColor(COLOR_LGREEN);
		}
		return result;
	}

	uint16  hx;
	uint16  hy;
}

void updateAwarenessScreen(string[]& factionsNames)
{
	if(@mouseMove!=null) mouseMove.OnMouseMove(__MouseX, __MouseY); // By aktualizowalo sie HP, nawet jak mycha jest nieruchomo nad celem

	FACTIONS.resize(0);
	for(uint i = 0; i < factionsNames.length(); i++) {
		FACTIONS.insertLast(factionsNames[i]);
	}
}

void InitAwarenessScreen()
{
	@awarenessMainFaction = GUI_AddText(CLIENT_MAIN_SCREEN_GAME)
		.TextBoxSize(400, 15)
		.TextOptions(FONT_FALLOUT, COLOR_TEXT, FT_BORDERED)
		.AbsolutePosition(true)
		.Visible(false);
	@awarenessFaction = GUI_AddText(CLIENT_MAIN_SCREEN_GAME)
		.TextBoxSize(400, 15)
		.TextOptions(FONT_FALLOUT, COLOR_LGRAY, FT_BORDERED)
		.AbsolutePosition(true)
		.Visible(false);
	@awarenessHp = GUI_AddText(CLIENT_MAIN_SCREEN_GAME)
		.TextBoxSize(200, 15)
		.TextOptions(FONT_FALLOUT, COLOR_TEXT, FT_BORDERED)
		.AbsolutePosition(true)
		.Visible(false);
	@awarenessArmor = GUI_AddText(CLIENT_MAIN_SCREEN_GAME)
		.TextBoxSize(300, 15)
		.TextOptions(FONT_FALLOUT, COLOR_TEXT, FT_BORDERED)
		.AbsolutePosition(true)
		.Visible(false);
	@awarenessHead = GUI_AddText(CLIENT_MAIN_SCREEN_GAME)
		.TextBoxSize(350, 15)
		.TextOptions(FONT_FALLOUT, COLOR_LGRAY, FT_BORDERED)
		.AbsolutePosition(true)
		.Visible(false);
	@awarenessWeapon = GUI_AddText(CLIENT_MAIN_SCREEN_GAME)
		.TextBoxSize(200, 15)
		.TextOptions(FONT_FALLOUT, COLOR_TEXT, FT_BORDERED)
		.AbsolutePosition(true)
		.Visible(false);
	@awarenessCripled = GUI_AddText(CLIENT_MAIN_SCREEN_GAME)
		.TextBoxSize(250, 55)
		.TextOptions(FONT_FALLOUT, COLOR_TEXT, FT_BORDERED)
		.AbsolutePosition(true)
		.Visible(false);
	@awarenessKarmaStatus = GUI_AddText(CLIENT_MAIN_SCREEN_GAME)
		.TextBoxSize(400, 15)
		.TextOptions(FONT_FALLOUT, COLOR_TEXT, FT_BORDERED)
		.AbsolutePosition(true)
		.Visible(false);	
}